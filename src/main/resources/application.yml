spring:

    ## 기본 설정
    application:
        name: Challenge.with-back
        version: v1.0.0

    ## MariaDB
    datasource:
        driver-class-name: org.mariadb.jdbc.Driver
        url: jdbc:mariadb://${DB_HOST}:${DB_PORT}/${DB_SCHEMA}
        username: ${DB_USERNAME}
        password: ${DB_PASSWORD}

    ## DDL 작동 방식
    jpa:
        hibernate:
            ddl-auto: update

    ## OAUTH 2.0
    security:
        oauth2:
            client:
                registration:

                    google:
                        client-id: ${GOOGLE_CLIENT_ID}
                        client-secret: ${GOOGLE_CLIENT_SECRET}
                        scope:
                            - email
                            - profile

                    kakao:
                        client-id: ${KAKAO_CLIENT_ID}
                        client-secret: ${KAKAO_CLIENT_SECRET}
                        client-name: kakao
                        scope:
                            - profile_nickname
                            - account_email
                        authorization-grant-type: authorization_code
                        redirect-uri: http://localhost:8080/login/oauth2/code/kakao
                        client-authentication-method: client_secret_post

                    naver:
                        client-id: ${NAVER_CLIENT_ID}
                        client-secret: ${NAVER_CLIENT_SECRET}
                        client-name: naver
                        scope:
                            - email
                            - name
                        authorization-grant-type: authorization_code
                        redirect-uri: http://localhost:8080/login/oauth2/code/naver

                provider:

                    kakao:
                        authorization-uri: https://kauth.kakao.com/oauth/authorize
                        token-uri: https://kauth.kakao.com/oauth/token
                        user-info-uri: https://kapi.kakao.com/v2/user/me
                        user-name-attribute: id

                    naver:
                        authorization-uri: https://nid.naver.com/oauth2.0/authorize
                        token-uri: https://nid.naver.com/oauth2.0/token
                        user-info-uri: https://openapi.naver.com/v1/nid/me
                        user-name-attribute: response

    ## Email
    mail:
        host: smtp.gmail.com
        port: 587
        username: ${GMAIL_USERNAME}
        password: ${GMAIL_PASSWORD}
        properties:
            mail:
                smtp:
                    connectiontimeout: 5000
                    timeout: 5000
                    writetimeout: 5000
                    pool: true
                    pool.size: 10
                    auth: true

                    starttls:
                        enable: true

    ## AWS S3
    cloud:
        aws:
            credentials:
                access-key: ${AWS_ACCESS_KEY}
                secret-key: ${AWS_SECRET_KEY}
            region:
                static: ${EVIDENCE_PHOTO_BUCKET_REGION}
    servlet:
        multipart:
            max-file-size: 10MB
            max-request-size: 10MB

    ## Spring Batch
    batch:
        job:
            enabled: false  # 프로젝트 실행 시 자동으로 배치 작업이 가동되는 것을 방지



